language: python
services:
  - docker
env:
  global:
    - DOCKER_COMPOSE_VERSION: 1.25.5
    - APPLICATION_NAME: aquila
    - SERVICE_NAME: aquila-web
before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - cp ${APPLICATION_NAME}/config.py.example ${APPLICATION_NAME}/config.py
  - docker-compose build
  - docker-compose up -d
  - docker-compose exec ${SERVICE_NAME} pip install coverage pre-commit
  - docker-compose exec ${SERVICE_NAME} pre-commit install
install: true
script:
  - docker-compose exec ${SERVICE_NAME} pre-commit run --all-files --show-diff-on-failure
  - docker-compose exec ${SERVICE_NAME} coverage run manage.py test
before_deploy:
  - sudo deploy_scripts/substitute_env.sh
  - sudo deploy_scripts/make_zip.sh $DEPLOY_ZIP_DIR $DEPLOY_ZIP_NAME
deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    local_dir: $DEPLOY_ZIP_DIR
    skip_cleanup: true
    on: &development
      repo: RockefellerArchiveCenter/${APPLICATION_NAME}
      branch: development
    bucket: $AWS_BUCKET_NAME
    region: us-east-1
  - provider: codedeploy
    wait_until_deployed: true
    bucket: $AWS_BUCKET_NAME
    key: $DEPLOY_ZIP_NAME
    bundle_type: zip
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    application: ${APPLICATION_NAME}
    deployment_group: AquilaDevelopment
    region: us-east-1
    on: *development
notifications:
  email: false

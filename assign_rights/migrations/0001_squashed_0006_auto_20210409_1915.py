# Generated by Django 3.1.7 on 2021-04-09 20:02

from __future__ import unicode_literals

import datetime

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.contrib.auth.models import Group
from django.db import migrations, models

# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# assign_rights.migrations.0005_auto_20200929_1724


def create_groups(apps, schema_editor):
    groups_to_add = ('edit', 'delete')

    for group in groups_to_add:
        if not Group.objects.filter(name=group).exists():
            Group.objects.create(name=group)


def delete_groups(apps, schema_editor):
    for group in Group.objects.all():
        group.delete()


class Migration(migrations.Migration):

    replaces = [('assign_rights', '0001_initial'), ('assign_rights', '0002_auto_20200707_1859'), ('assign_rights', '0003_auto_20200709_1659'), ('assign_rights', '0004_auto_20200710_0029'), ('assign_rights', '0005_auto_20200929_1724'), ('assign_rights', '0005_auto_20201006_1835'), ('assign_rights', '0006_auto_20210409_1915')]

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='RightsShell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rights_basis', models.CharField(choices=[('Copyright', 'Copyright'), ('Statute', 'Statute'), ('License', 'License'), ('Other', 'Other')], max_length=64)),
                ('copyright_status', models.CharField(blank=True, choices=[('copyrighted', 'copyrighted'), ('public domain', 'public domain'), ('unknown', 'unknown')], max_length=64, null=True)),
                ('determination_date', models.DateField(blank=True, default=datetime.datetime.now, null=True)),
                ('note', models.TextField()),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('start_date_period', models.PositiveSmallIntegerField(default=0)),
                ('end_date_period', models.PositiveSmallIntegerField(default=0)),
                ('end_date_open', models.BooleanField(default=False)),
                ('license_terms', models.TextField(blank=True, null=True)),
                ('statute_citation', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now=True)),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
                ('jurisdiction', models.CharField(blank=True, max_length=2, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Grouping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('created', models.DateTimeField(auto_now=True)),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
                ('rights_shells', models.ManyToManyField(to='assign_rights.RightsShell')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='RightsGranted',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('act', models.CharField(choices=[('publish', 'Publish'), ('disseminate', 'Disseminate'), ('replicate', 'Replicate'), ('migrate', 'Migrate'), ('modify', 'Modify'), ('use', 'Use'), ('delete', 'Delete')], max_length=64)),
                ('restriction', models.CharField(choices=[('allow', 'Allow'), ('disallow', 'Disallow'), ('conditional', 'Conditional')], max_length=64)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('start_date_period', models.PositiveSmallIntegerField(default=0)),
                ('end_date_period', models.PositiveSmallIntegerField(default=0)),
                ('end_date_open', models.BooleanField(default=False)),
                ('note', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now=True)),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
                ('basis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assign_rights.rightsshell')),
            ],
        ),
        migrations.RunPython(create_groups, delete_groups),
        migrations.AlterField(
            model_name='rightsshell',
            name='end_date_open',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='rightsshell',
            name='end_date_period',
            field=models.PositiveSmallIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='rightsshell',
            name='note',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='grouping',
            name='description',
            field=models.TextField(),
        ),
        migrations.AlterField(
            model_name='rightsgranted',
            name='end_date_period',
            field=models.PositiveSmallIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='rightsgranted',
            name='start_date_period',
            field=models.PositiveSmallIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='rightsshell',
            name='end_date_open',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='rightsshell',
            name='note',
            field=models.TextField(default='note'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='rightsshell',
            name='rights_basis',
            field=models.CharField(choices=[('copyright', 'Copyright'), ('statute', 'Statute'), ('license', 'License'), ('policy', 'Policy'), ('donor', 'Donor')], max_length=64),
        ),
        migrations.AlterField(
            model_name='rightsshell',
            name='start_date_period',
            field=models.PositiveSmallIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='first_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='first name'),
        ),
    ]
